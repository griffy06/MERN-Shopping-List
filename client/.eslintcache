[{"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\index.js":"1","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\App.js":"2","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\AppNavbar.js":"4","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\ShoppingList.js":"5","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\store.js":"6","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reducers\\index.js":"7","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reducers\\itemReducer.js":"8","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\actions\\itemActions.js":"9","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\actions\\types.js":"10","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\ItemModal.js":"11","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reducers\\errorReducer.js":"12","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reducers\\authReducer.js":"13","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\actions\\authActions.js":"14","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\actions\\errorActions.js":"15","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\auth\\RegisterModal.js":"16","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\auth\\Logout.js":"17","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\auth\\LoginModal.js":"18"},{"size":478,"mtime":1607949055553,"results":"19","hashOfConfig":"20"},{"size":767,"mtime":1608061729628,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":2232,"mtime":1608116703981,"results":"23","hashOfConfig":"20"},{"size":1994,"mtime":1608117346252,"results":"24","hashOfConfig":"20"},{"size":406,"mtime":1608037854501,"results":"25","hashOfConfig":"20"},{"size":280,"mtime":1608059477920,"results":"26","hashOfConfig":"20"},{"size":888,"mtime":1608032097910,"results":"27","hashOfConfig":"20"},{"size":1332,"mtime":1608116999624,"results":"28","hashOfConfig":"20"},{"size":617,"mtime":1608059414536,"results":"29","hashOfConfig":"20"},{"size":2641,"mtime":1608117235118,"results":"30","hashOfConfig":"20"},{"size":619,"mtime":1608059681270,"results":"31","hashOfConfig":"20"},{"size":1464,"mtime":1608113544224,"results":"32","hashOfConfig":"20"},{"size":2583,"mtime":1608116155152,"results":"33","hashOfConfig":"20"},{"size":324,"mtime":1608060922943,"results":"34","hashOfConfig":"20"},{"size":4503,"mtime":1608115157366,"results":"35","hashOfConfig":"20"},{"size":614,"mtime":1608115732195,"results":"36","hashOfConfig":"20"},{"size":3985,"mtime":1608116251224,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1oh9pyn",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\index.js",[],["79","80"],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\App.js",[],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\AppNavbar.js",["81"],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\ShoppingList.js",["82"],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\store.js",[],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reducers\\index.js",[],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reducers\\itemReducer.js",["83"],"import {GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING} from '../actions/types';\r\n\r\nconst initialState = {\r\n    items: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_ITEMS:\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                loading: false\r\n            };\r\n        case DELETE_ITEM:\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(item => item._id!==action.payload)\r\n            };\r\n        case ADD_ITEM:\r\n            return {\r\n                ...state,\r\n                items: [action.payload, ...state.items]\r\n            }\r\n        case ITEMS_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\actions\\itemActions.js",[],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\actions\\types.js",[],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\ItemModal.js",["84"],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reducers\\errorReducer.js",["85"],"import {GET_ERRORS, CLEAR_ERRORS} from '../actions/types';\r\n\r\nconst initialState = {\r\n    msg: {},\r\n    status: null,\r\n    id: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_ERRORS:\r\n            return {\r\n                msg: action.payload.msg,\r\n                status: action.payload.status,\r\n                id: action.payload.id\r\n            };\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                msg: {},\r\n                status: null,\r\n                id: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reducers\\authReducer.js",["86"],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\actions\\authActions.js",[],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\actions\\errorActions.js",[],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\auth\\RegisterModal.js",["87"],"import react, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    NavLink,\r\n    Alert\r\n} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { register } from '../../actions/authActions'\r\nimport {clearErrors} from '../../actions/errorActions';\r\n\r\nclass RegisterModal extends Component{\r\n    state = {\r\n        modal: false,\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        msg: null\r\n    }\r\n\r\n    static propTypes = {\r\n        isAuthenticated: PropTypes.bool,\r\n        error: PropTypes.object.isRequired,\r\n        register: PropTypes.func.isRequired,\r\n        clearErrors: PropTypes.func.isRequired\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const {error, isAuthenticated} = this.props;\r\n        if(error !== prevProps.error) {\r\n            //check for register error\r\n            if(error.id === 'REGISTER_FAIL') {\r\n                this.setState({msg: error.msg.msg});\r\n            } else {\r\n                this.setState({msg: null});\r\n            }\r\n        }\r\n\r\n        //if authenticated, close modal\r\n        if(this.state.modal) {\r\n            if(isAuthenticated) {\r\n                this.toggle();\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        //clear errors\r\n        this.props.clearErrors();\r\n\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const {name, email, password} = this.state;\r\n\r\n        //create user object\r\n        const newUser = {\r\n            name, email, password\r\n        }\r\n\r\n        //attempt to register\r\n        this.props.register(newUser);\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n           <div>\r\n               <NavLink onClick={this.toggle} href=\"#\">\r\n                   Register\r\n               </NavLink>\r\n\r\n               <Modal\r\n                isOpen={this.state.modal}\r\n                toggle={this.toggle}\r\n               >\r\n                   <ModalHeader toggle={this.toggle}>\r\n                       Register\r\n                   </ModalHeader>\r\n                   <ModalBody>\r\n                       {this.state.msg ? (\r\n                       <Alert color='danger'>{this.state.msg}</Alert>\r\n                       ) : null}\r\n                       <Form onSubmit={this.onSubmit}>\r\n                           <FormGroup>\r\n                               <Label for=\"name\">Name</Label>\r\n                               <Input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                                placeholder=\"Name\"\r\n                                onChange={this.onChange}\r\n                                className='mb-3'\r\n                               />\r\n                               <Label for=\"email\">Email</Label>\r\n                               <Input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                placeholder=\"Email\"\r\n                                onChange={this.onChange}\r\n                                className='mb-3'\r\n                               />\r\n                               <Label for=\"password\">Password</Label>\r\n                               <Input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={this.onChange}\r\n                                className='mb-3'\r\n                               />\r\n                               <Button\r\n                                color=\"dark\"\r\n                                style={{marginTop:'2rem'}}\r\n                                block\r\n                               >Register</Button>\r\n                           </FormGroup>\r\n                       </Form>\r\n                   </ModalBody>\r\n\r\n               </Modal>\r\n           </div> \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error\r\n});\r\n\r\nexport default connect(mapStateToProps, {register, clearErrors})(RegisterModal);","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\auth\\Logout.js",[],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\auth\\LoginModal.js",["88"],"import react, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    NavLink,\r\n    Alert\r\n} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/authActions'\r\nimport {clearErrors} from '../../actions/errorActions';\r\n\r\nclass LoginModal extends Component{\r\n    state = {\r\n        modal: false,\r\n        email: '',\r\n        password: '',\r\n        msg: null\r\n    }\r\n\r\n    static propTypes = {\r\n        isAuthenticated: PropTypes.bool,\r\n        error: PropTypes.object.isRequired,\r\n        login: PropTypes.func.isRequired,\r\n        clearErrors: PropTypes.func.isRequired\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const {error, isAuthenticated} = this.props;\r\n        if(error !== prevProps.error) {\r\n            //check for register error\r\n            if(error.id === 'LOGIN_FAIL') {\r\n                this.setState({msg: error.msg.msg});\r\n            } else {\r\n                this.setState({msg: null});\r\n            }\r\n        }\r\n\r\n        //if authenticated, close modal\r\n        if(this.state.modal) {\r\n            if(isAuthenticated) {\r\n                this.toggle();\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        //clear errors\r\n        this.props.clearErrors();\r\n\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const {email, password} = this.state;\r\n        const user = {\r\n            email,\r\n            password\r\n        }\r\n        //attempt to login\r\n        this.props.login(user);\r\n\r\n    };\r\n\r\n    render() {\r\n        return(\r\n           <div>\r\n               <NavLink onClick={this.toggle} href=\"#\">\r\n                   Login\r\n               </NavLink>\r\n\r\n               <Modal\r\n                isOpen={this.state.modal}\r\n                toggle={this.toggle}\r\n               >\r\n                   <ModalHeader toggle={this.toggle}>\r\n                       Login\r\n                   </ModalHeader>\r\n                   <ModalBody>\r\n                       {this.state.msg ? (\r\n                       <Alert color='danger'>{this.state.msg}</Alert>\r\n                       ) : null}\r\n                       <Form onSubmit={this.onSubmit}>\r\n                           <FormGroup>\r\n                               <Label for=\"email\">Email</Label>\r\n                               <Input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                placeholder=\"Email\"\r\n                                onChange={this.onChange}\r\n                                className='mb-3'\r\n                               />\r\n                               <Label for=\"password\">Password</Label>\r\n                               <Input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={this.onChange}\r\n                                className='mb-3'\r\n                               />\r\n                               <Button\r\n                                color=\"dark\"\r\n                                style={{marginTop:'2rem'}}\r\n                                block\r\n                               >Login</Button>\r\n                           </FormGroup>\r\n                       </Form>\r\n                   </ModalBody>\r\n\r\n               </Modal>\r\n           </div> \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error\r\n});\r\n\r\nexport default connect(mapStateToProps, {login, clearErrors})(LoginModal);",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":9,"column":5,"nodeType":"95","messageId":"96","endLine":9,"endColumn":12},{"ruleId":"93","severity":1,"message":"97","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":13},{"ruleId":"98","severity":1,"message":"99","line":8,"column":1,"nodeType":"100","endLine":34,"endColumn":2},{"ruleId":"93","severity":1,"message":"97","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":13},{"ruleId":"98","severity":1,"message":"99","line":9,"column":1,"nodeType":"100","endLine":27,"endColumn":2},{"ruleId":"98","severity":1,"message":"99","line":19,"column":1,"nodeType":"100","endLine":59,"endColumn":2},{"ruleId":"93","severity":1,"message":"97","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":13},{"ruleId":"93","severity":1,"message":"97","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":13},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]