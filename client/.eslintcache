[{"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\index.js":"1","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\App.js":"2","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\AppNavbar.js":"4","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\ShoppingList.js":"5","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\store.js":"6","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reducers\\index.js":"7","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reducers\\itemReducer.js":"8","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\actions\\itemActions.js":"9","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\actions\\types.js":"10","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\ItemModal.js":"11","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reducers\\errorReducer.js":"12","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reducers\\authReducer.js":"13","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\actions\\authActions.js":"14","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\actions\\errorActions.js":"15","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\auth\\RegisterModal.js":"16","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\auth\\Logout.js":"17","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\auth\\LoginModal.js":"18"},{"size":478,"mtime":1607949055553,"results":"19","hashOfConfig":"20"},{"size":767,"mtime":1608061729628,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":2232,"mtime":1608116703981,"results":"23","hashOfConfig":"20"},{"size":1994,"mtime":1608117346252,"results":"24","hashOfConfig":"20"},{"size":406,"mtime":1608037854501,"results":"25","hashOfConfig":"20"},{"size":280,"mtime":1608059477920,"results":"26","hashOfConfig":"20"},{"size":888,"mtime":1608032097910,"results":"27","hashOfConfig":"20"},{"size":1332,"mtime":1608116999624,"results":"28","hashOfConfig":"20"},{"size":617,"mtime":1608059414536,"results":"29","hashOfConfig":"20"},{"size":2641,"mtime":1608117235118,"results":"30","hashOfConfig":"20"},{"size":619,"mtime":1608059681270,"results":"31","hashOfConfig":"20"},{"size":1464,"mtime":1608113544224,"results":"32","hashOfConfig":"20"},{"size":2583,"mtime":1608116155152,"results":"33","hashOfConfig":"20"},{"size":324,"mtime":1608060922943,"results":"34","hashOfConfig":"20"},{"size":4503,"mtime":1608115157366,"results":"35","hashOfConfig":"20"},{"size":614,"mtime":1608115732195,"results":"36","hashOfConfig":"20"},{"size":3985,"mtime":1608116251224,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1oh9pyn",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"40"},"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\index.js",[],["84","85"],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\App.js",[],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\AppNavbar.js",["86"],"import React, {Component, Fragment} from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Container\r\n} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport RegisterModal from './auth/RegisterModal';\r\nimport LoginModal from './auth/LoginModal';\r\nimport Logout from './auth/Logout';\r\n\r\nclass AppNavbar extends Component{\r\n    state= {\r\n        isOpen: false\r\n    }\r\n\r\n    static propTypes = {\r\n        auth: PropTypes.object.isRequired\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const {isAuthenticated, user} = this.props.auth\r\n\r\n        const authLinks = (\r\n            <Fragment>\r\n                <NavItem>\r\n                    <span className=\"navbar-text mr-3\">\r\n                        <strong>{user ? `Welcome ${user.name}` : ''}</strong>\r\n                    </span>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <Logout />\r\n                </NavItem>\r\n            </Fragment>\r\n        )\r\n        const guestLinks = (\r\n            <Fragment>\r\n                <NavItem>\r\n                    <RegisterModal />\r\n                </NavItem>\r\n                <NavItem>\r\n                    <LoginModal />\r\n                </NavItem>\r\n            </Fragment>\r\n        )\r\n\r\n        return (\r\n            <div>\r\n            <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n                <Container>\r\n                    <NavbarBrand href=\"/\">\r\n                        ShoppingList\r\n                    </NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle} />\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                          {isAuthenticated ? authLinks : guestLinks}  \r\n                        </Nav>\r\n                    </Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(AppNavbar);","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\ShoppingList.js",["87"],"import react, { Component } from 'react';\r\nimport {Container, ListGroup, ListGroupItem, Button} from 'reactstrap';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport {connect} from 'react-redux';\r\nimport {getItems, deleteItem} from '../actions/itemActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ShoppingList extends Component {\r\n\r\n    static protoTypes = {\r\n        getItems: PropTypes.func.isRequired,\r\n        item: PropTypes.object.isRequired,\r\n        isAuthenticated: PropTypes.bool\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getItems();\r\n    }\r\n\r\n    onDeleteClick = (id) => {\r\n        this.props.deleteItem(id);\r\n    };\r\n\r\n    render() {\r\n        \r\n        const {items} = this.props.item;\r\n        return(\r\n            <Container>\r\n                <ListGroup>\r\n                    <TransitionGroup className=\"shopping-list\">\r\n                        {items.map(({_id, name}) => (\r\n                            <CSSTransition key={_id} timeout={500} classNames=\"fade\">\r\n                                <ListGroupItem>\r\n                                    {this.props.isAuthenticated ? <Button\r\n                                        className=\"remove-btn\"\r\n                                        color=\"danger\"\r\n                                        size=\"sm\"\r\n                                        onClick={this.onDeleteClick.bind(this, _id)}\r\n                                    >&times;</Button> : null}\r\n                                    \r\n                                    {name}\r\n                                </ListGroupItem>\r\n                            </CSSTransition>\r\n                        ))}\r\n                    </TransitionGroup>\r\n                </ListGroup>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    item: state.item,\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, {getItems, deleteItem})(ShoppingList);","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\store.js",[],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reducers\\index.js",[],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reducers\\itemReducer.js",["88"],"import {GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING} from '../actions/types';\r\n\r\nconst initialState = {\r\n    items: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_ITEMS:\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                loading: false\r\n            };\r\n        case DELETE_ITEM:\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(item => item._id!==action.payload)\r\n            };\r\n        case ADD_ITEM:\r\n            return {\r\n                ...state,\r\n                items: [action.payload, ...state.items]\r\n            }\r\n        case ITEMS_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}",["89","90"],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\actions\\itemActions.js",[],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\actions\\types.js",[],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\ItemModal.js",["91"],"import react, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input\r\n} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport {addItem} from '../actions/itemActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ItemModal extends Component{\r\n    state = {\r\n        modal: false,\r\n        name: ''\r\n    }\r\n\r\n    static propTypes = {\r\n        isAuthenticated: PropTypes.bool\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newItem = {\r\n            name: this.state.name\r\n        }\r\n\r\n        //add item via addItem action\r\n        this.props.addItem(newItem);\r\n\r\n        //close modal\r\n        this.toggle();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n           <div>\r\n               {this.props.isAuthenticated ? <Button\r\n                color=\"dark\"\r\n                style={{marginBottom:'2rem'}}\r\n                onClick={this.toggle}\r\n               >Add item</Button> : <h4 className=\"mp-3 ml-4\">Please login to manage items</h4>}\r\n\r\n               <Modal\r\n                isOpen={this.state.modal}\r\n                toggle={this.toggle}\r\n               >\r\n                   <ModalHeader toggle={this.toggle}>\r\n                       Add to Shopping List\r\n                   </ModalHeader>\r\n                   <ModalBody>\r\n                       <Form onSubmit={this.onSubmit}>\r\n                           <FormGroup>\r\n                               <Label for=\"item\">Item</Label>\r\n                               <Input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                id=\"item\"\r\n                                placeholder=\"Add shopping item\"\r\n                                onChange={this.onChange}\r\n                               />\r\n                               <Button\r\n                                color=\"dark\"\r\n                                style={{marginTop:'2rem'}}\r\n                                block\r\n                               >Add item</Button>\r\n                           </FormGroup>\r\n                       </Form>\r\n                   </ModalBody>\r\n\r\n               </Modal>\r\n           </div> \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    item: state.item,\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, {addItem})(ItemModal);","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reducers\\errorReducer.js",["92"],"import {GET_ERRORS, CLEAR_ERRORS} from '../actions/types';\r\n\r\nconst initialState = {\r\n    msg: {},\r\n    status: null,\r\n    id: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_ERRORS:\r\n            return {\r\n                msg: action.payload.msg,\r\n                status: action.payload.status,\r\n                id: action.payload.id\r\n            };\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                msg: {},\r\n                status: null,\r\n                id: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\reducers\\authReducer.js",["93"],"import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    isLoading: false,\r\n    user: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload\r\n            };\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                isLoading: false\r\n            };\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\actions\\authActions.js",[],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\actions\\errorActions.js",[],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\auth\\RegisterModal.js",["94"],"import react, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    NavLink,\r\n    Alert\r\n} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { register } from '../../actions/authActions'\r\nimport {clearErrors} from '../../actions/errorActions';\r\n\r\nclass RegisterModal extends Component{\r\n    state = {\r\n        modal: false,\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        msg: null\r\n    }\r\n\r\n    static propTypes = {\r\n        isAuthenticated: PropTypes.bool,\r\n        error: PropTypes.object.isRequired,\r\n        register: PropTypes.func.isRequired,\r\n        clearErrors: PropTypes.func.isRequired\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const {error, isAuthenticated} = this.props;\r\n        if(error !== prevProps.error) {\r\n            //check for register error\r\n            if(error.id === 'REGISTER_FAIL') {\r\n                this.setState({msg: error.msg.msg});\r\n            } else {\r\n                this.setState({msg: null});\r\n            }\r\n        }\r\n\r\n        //if authenticated, close modal\r\n        if(this.state.modal) {\r\n            if(isAuthenticated) {\r\n                this.toggle();\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        //clear errors\r\n        this.props.clearErrors();\r\n\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const {name, email, password} = this.state;\r\n\r\n        //create user object\r\n        const newUser = {\r\n            name, email, password\r\n        }\r\n\r\n        //attempt to register\r\n        this.props.register(newUser);\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n           <div>\r\n               <NavLink onClick={this.toggle} href=\"#\">\r\n                   Register\r\n               </NavLink>\r\n\r\n               <Modal\r\n                isOpen={this.state.modal}\r\n                toggle={this.toggle}\r\n               >\r\n                   <ModalHeader toggle={this.toggle}>\r\n                       Register\r\n                   </ModalHeader>\r\n                   <ModalBody>\r\n                       {this.state.msg ? (\r\n                       <Alert color='danger'>{this.state.msg}</Alert>\r\n                       ) : null}\r\n                       <Form onSubmit={this.onSubmit}>\r\n                           <FormGroup>\r\n                               <Label for=\"name\">Name</Label>\r\n                               <Input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                                placeholder=\"Name\"\r\n                                onChange={this.onChange}\r\n                                className='mb-3'\r\n                               />\r\n                               <Label for=\"email\">Email</Label>\r\n                               <Input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                placeholder=\"Email\"\r\n                                onChange={this.onChange}\r\n                                className='mb-3'\r\n                               />\r\n                               <Label for=\"password\">Password</Label>\r\n                               <Input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={this.onChange}\r\n                                className='mb-3'\r\n                               />\r\n                               <Button\r\n                                color=\"dark\"\r\n                                style={{marginTop:'2rem'}}\r\n                                block\r\n                               >Register</Button>\r\n                           </FormGroup>\r\n                       </Form>\r\n                   </ModalBody>\r\n\r\n               </Modal>\r\n           </div> \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error\r\n});\r\n\r\nexport default connect(mapStateToProps, {register, clearErrors})(RegisterModal);","C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\auth\\Logout.js",[],"C:\\Users\\Cheena\\Desktop\\react_projects\\mern_shopping_list\\client\\src\\components\\auth\\LoginModal.js",["95"],"import react, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    NavLink,\r\n    Alert\r\n} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/authActions'\r\nimport {clearErrors} from '../../actions/errorActions';\r\n\r\nclass LoginModal extends Component{\r\n    state = {\r\n        modal: false,\r\n        email: '',\r\n        password: '',\r\n        msg: null\r\n    }\r\n\r\n    static propTypes = {\r\n        isAuthenticated: PropTypes.bool,\r\n        error: PropTypes.object.isRequired,\r\n        login: PropTypes.func.isRequired,\r\n        clearErrors: PropTypes.func.isRequired\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const {error, isAuthenticated} = this.props;\r\n        if(error !== prevProps.error) {\r\n            //check for register error\r\n            if(error.id === 'LOGIN_FAIL') {\r\n                this.setState({msg: error.msg.msg});\r\n            } else {\r\n                this.setState({msg: null});\r\n            }\r\n        }\r\n\r\n        //if authenticated, close modal\r\n        if(this.state.modal) {\r\n            if(isAuthenticated) {\r\n                this.toggle();\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        //clear errors\r\n        this.props.clearErrors();\r\n\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const {email, password} = this.state;\r\n        const user = {\r\n            email,\r\n            password\r\n        }\r\n        //attempt to login\r\n        this.props.login(user);\r\n\r\n    };\r\n\r\n    render() {\r\n        return(\r\n           <div>\r\n               <NavLink onClick={this.toggle} href=\"#\">\r\n                   Login\r\n               </NavLink>\r\n\r\n               <Modal\r\n                isOpen={this.state.modal}\r\n                toggle={this.toggle}\r\n               >\r\n                   <ModalHeader toggle={this.toggle}>\r\n                       Login\r\n                   </ModalHeader>\r\n                   <ModalBody>\r\n                       {this.state.msg ? (\r\n                       <Alert color='danger'>{this.state.msg}</Alert>\r\n                       ) : null}\r\n                       <Form onSubmit={this.onSubmit}>\r\n                           <FormGroup>\r\n                               <Label for=\"email\">Email</Label>\r\n                               <Input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                placeholder=\"Email\"\r\n                                onChange={this.onChange}\r\n                                className='mb-3'\r\n                               />\r\n                               <Label for=\"password\">Password</Label>\r\n                               <Input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={this.onChange}\r\n                                className='mb-3'\r\n                               />\r\n                               <Button\r\n                                color=\"dark\"\r\n                                style={{marginTop:'2rem'}}\r\n                                block\r\n                               >Login</Button>\r\n                           </FormGroup>\r\n                       </Form>\r\n                   </ModalBody>\r\n\r\n               </Modal>\r\n           </div> \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error\r\n});\r\n\r\nexport default connect(mapStateToProps, {login, clearErrors})(LoginModal);",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":9,"column":5,"nodeType":"102","messageId":"103","endLine":9,"endColumn":12},{"ruleId":"100","severity":1,"message":"104","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":13},{"ruleId":"105","severity":1,"message":"106","line":8,"column":1,"nodeType":"107","endLine":34,"endColumn":2},{"ruleId":"96","replacedBy":"108"},{"ruleId":"98","replacedBy":"109"},{"ruleId":"100","severity":1,"message":"104","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":13},{"ruleId":"105","severity":1,"message":"106","line":9,"column":1,"nodeType":"107","endLine":27,"endColumn":2},{"ruleId":"105","severity":1,"message":"106","line":19,"column":1,"nodeType":"107","endLine":59,"endColumn":2},{"ruleId":"100","severity":1,"message":"104","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":13},{"ruleId":"100","severity":1,"message":"104","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":13},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["110"],["111"],"no-global-assign","no-unsafe-negation"]